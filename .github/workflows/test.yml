name: "test"

on:
  pull_request:
  push:
  workflow_call:

jobs:
  package-test:
    strategy:
      matrix:
        go: ["1.22"]
        os: ["ubuntu-latest", "macos-latest"]
    runs-on: "${{ matrix.os }}"
    steps:
      - uses: "actions/checkout@v4"

      - uses: "actions/setup-go@v5"
        with:
          go-version: "${{ matrix.go }}"

      - run: |
          go clean -cache
          go test -count=1 ./...

  full-build-test:
    strategy:
      matrix:
        go: ["1.22"]
        os: ["ubuntu-latest", "macos-latest"]
    runs-on: "${{ matrix.os }}"
    steps:
      - uses: "actions/checkout@v4"
        with:
          submodules: "recursive"

      - uses: "actions/setup-go@v5"
        with:
          go-version: "${{ matrix.go }}"

      - if: "${{ matrix.os == 'macos-latest' }}"
        run: |
          brew update
          brew install cmake gcc

      - name: "Remove packaged C++ libraries and Go code"
        run: |
          rm ./lib/* ./**/*_string.go

      - name: "Generate Go code and build+install C++ library"
        run: |
          go install golang.org/x/tools/cmd/stringer@latest
          go generate ./...

      - run: |
          go clean -cache
          go test -count=1 ./...
